<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.older.manager.mapper.SurgeryMapper" >
  <resultMap id="BaseResultMap" type="com.older.manager.bean.Surgery" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="surgeryName" property="surgeryname" jdbcType="VARCHAR" />
    <result column="surgeryTime" property="surgerytime" jdbcType="DATE" />
    <result column="hospitalName" property="hospitalname" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="oldMan_id" property="oldmanId" jdbcType="INTEGER" />
    <result column="numone" property="numone" jdbcType="VARCHAR" />
    <result column="numtwo" property="numtwo" jdbcType="VARCHAR" />
    <result column="numthree" property="numthree" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, surgeryName, surgeryTime, hospitalName, remark, oldMan_id, numone, numtwo, numthree
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.older.manager.bean.SurgeryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from surgery
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
   order by id DESC
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from surgery
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from surgery
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.older.manager.bean.SurgeryExample" >
    delete from surgery
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.older.manager.bean.Surgery" >
    insert into surgery (id, surgeryName, surgeryTime, 
      hospitalName, remark, oldMan_id, 
      numone, numtwo, numthree
      )
    values (#{id,jdbcType=INTEGER}, #{surgeryname,jdbcType=VARCHAR}, #{surgerytime,jdbcType=DATE}, 
      #{hospitalname,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{oldmanId,jdbcType=INTEGER}, 
      #{numone,jdbcType=VARCHAR}, #{numtwo,jdbcType=VARCHAR}, #{numthree,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.older.manager.bean.Surgery" >
    insert into surgery
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="surgeryname != null" >
        surgeryName,
      </if>
      <if test="surgerytime != null" >
        surgeryTime,
      </if>
      <if test="hospitalname != null" >
        hospitalName,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="oldmanId != null" >
        oldMan_id,
      </if>
      <if test="numone != null" >
        numone,
      </if>
      <if test="numtwo != null" >
        numtwo,
      </if>
      <if test="numthree != null" >
        numthree,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="surgeryname != null" >
        #{surgeryname,jdbcType=VARCHAR},
      </if>
      <if test="surgerytime != null" >
        #{surgerytime,jdbcType=DATE},
      </if>
      <if test="hospitalname != null" >
        #{hospitalname,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="oldmanId != null" >
        #{oldmanId,jdbcType=INTEGER},
      </if>
      <if test="numone != null" >
        #{numone,jdbcType=VARCHAR},
      </if>
      <if test="numtwo != null" >
        #{numtwo,jdbcType=VARCHAR},
      </if>
      <if test="numthree != null" >
        #{numthree,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.older.manager.bean.SurgeryExample" resultType="java.lang.Integer" >
    select count(*) from surgery
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update surgery
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.surgeryname != null" >
        surgeryName = #{record.surgeryname,jdbcType=VARCHAR},
      </if>
      <if test="record.surgerytime != null" >
        surgeryTime = #{record.surgerytime,jdbcType=DATE},
      </if>
      <if test="record.hospitalname != null" >
        hospitalName = #{record.hospitalname,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.oldmanId != null" >
        oldMan_id = #{record.oldmanId,jdbcType=INTEGER},
      </if>
      <if test="record.numone != null" >
        numone = #{record.numone,jdbcType=VARCHAR},
      </if>
      <if test="record.numtwo != null" >
        numtwo = #{record.numtwo,jdbcType=VARCHAR},
      </if>
      <if test="record.numthree != null" >
        numthree = #{record.numthree,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update surgery
    set id = #{record.id,jdbcType=INTEGER},
      surgeryName = #{record.surgeryname,jdbcType=VARCHAR},
      surgeryTime = #{record.surgerytime,jdbcType=DATE},
      hospitalName = #{record.hospitalname,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      oldMan_id = #{record.oldmanId,jdbcType=INTEGER},
      numone = #{record.numone,jdbcType=VARCHAR},
      numtwo = #{record.numtwo,jdbcType=VARCHAR},
      numthree = #{record.numthree,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.older.manager.bean.Surgery" >
    update surgery
    <set >
      <if test="surgeryname != null" >
        surgeryName = #{surgeryname,jdbcType=VARCHAR},
      </if>
      <if test="surgerytime != null" >
        surgeryTime = #{surgerytime,jdbcType=DATE},
      </if>
      <if test="hospitalname != null" >
        hospitalName = #{hospitalname,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="oldmanId != null" >
        oldMan_id = #{oldmanId,jdbcType=INTEGER},
      </if>
      <if test="numone != null" >
        numone = #{numone,jdbcType=VARCHAR},
      </if>
      <if test="numtwo != null" >
        numtwo = #{numtwo,jdbcType=VARCHAR},
      </if>
      <if test="numthree != null" >
        numthree = #{numthree,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.older.manager.bean.Surgery" >
    update surgery
    set surgeryName = #{surgeryname,jdbcType=VARCHAR},
      surgeryTime = #{surgerytime,jdbcType=DATE},
      hospitalName = #{hospitalname,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      oldMan_id = #{oldmanId,jdbcType=INTEGER},
      numone = #{numone,jdbcType=VARCHAR},
      numtwo = #{numtwo,jdbcType=VARCHAR},
      numthree = #{numthree,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>