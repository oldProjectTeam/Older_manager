<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.older.manager.mapper.ProductCollectMapper">
	<resultMap id="BaseResultMap" type="com.older.manager.bean.ProductCollect">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="users_id" property="usersId" jdbcType="INTEGER" />
		<result column="products_id" property="productsId" jdbcType="INTEGER" />
		<result column="time" property="time" jdbcType="DATE" />
		<result column="productCollect1" property="productcollect1"
			jdbcType="VARCHAR" />
		<result column="productCollect2" property="productcollect2"
			jdbcType="VARCHAR" />
		<result column="productCollect3" property="productcollect3"
			jdbcType="VARCHAR" />
		<result column="productCollect4" property="productcollect4"
			jdbcType="VARCHAR" />
		<result column="productCollect5" property="productcollect5"
			jdbcType="VARCHAR" />
		<result column="productCollect6" property="productcollect6"
			jdbcType="VARCHAR" />
		<result column="productCollect7" property="productcollect7"
			jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, users_id, products_id, time, productCollect1,
		productCollect2,
		productCollect3,
		productCollect4, productCollect5,
		productCollect6, productCollect7
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.older.manager.bean.ProductCollectExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from productcollect
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from productcollect
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		productcollect
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.older.manager.bean.ProductCollectExample">
		delete from productcollect
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.older.manager.bean.ProductCollect">
		insert into productcollect
		(id, users_id, products_id,
		time, productCollect1, productCollect2,
		productCollect3, productCollect4, productCollect5,
		productCollect6,
		productCollect7)
		values (#{id,jdbcType=INTEGER},
		#{usersId,jdbcType=INTEGER},
		#{productsId,jdbcType=INTEGER},
		#{time,jdbcType=DATE}, #{productcollect1,jdbcType=VARCHAR},
		#{productcollect2,jdbcType=VARCHAR},
		#{productcollect3,jdbcType=VARCHAR},
		#{productcollect4,jdbcType=VARCHAR},
		#{productcollect5,jdbcType=VARCHAR},
		#{productcollect6,jdbcType=VARCHAR},
		#{productcollect7,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.older.manager.bean.ProductCollect">
		insert into productcollect
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="usersId != null">
				users_id,
			</if>
			<if test="productsId != null">
				products_id,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="productcollect1 != null">
				productCollect1,
			</if>
			<if test="productcollect2 != null">
				productCollect2,
			</if>
			<if test="productcollect3 != null">
				productCollect3,
			</if>
			<if test="productcollect4 != null">
				productCollect4,
			</if>
			<if test="productcollect5 != null">
				productCollect5,
			</if>
			<if test="productcollect6 != null">
				productCollect6,
			</if>
			<if test="productcollect7 != null">
				productCollect7,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="usersId != null">
				#{usersId,jdbcType=INTEGER},
			</if>
			<if test="productsId != null">
				#{productsId,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				#{time,jdbcType=DATE},
			</if>
			<if test="productcollect1 != null">
				#{productcollect1,jdbcType=VARCHAR},
			</if>
			<if test="productcollect2 != null">
				#{productcollect2,jdbcType=VARCHAR},
			</if>
			<if test="productcollect3 != null">
				#{productcollect3,jdbcType=VARCHAR},
			</if>
			<if test="productcollect4 != null">
				#{productcollect4,jdbcType=VARCHAR},
			</if>
			<if test="productcollect5 != null">
				#{productcollect5,jdbcType=VARCHAR},
			</if>
			<if test="productcollect6 != null">
				#{productcollect6,jdbcType=VARCHAR},
			</if>
			<if test="productcollect7 != null">
				#{productcollect7,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.older.manager.bean.ProductCollectExample"
		resultType="java.lang.Integer">
		select count(*) from productcollect
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update productcollect
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.usersId != null">
				users_id = #{record.usersId,jdbcType=INTEGER},
			</if>
			<if test="record.productsId != null">
				products_id = #{record.productsId,jdbcType=INTEGER},
			</if>
			<if test="record.time != null">
				time = #{record.time,jdbcType=DATE},
			</if>
			<if test="record.productcollect1 != null">
				productCollect1 =
				#{record.productcollect1,jdbcType=VARCHAR},
			</if>
			<if test="record.productcollect2 != null">
				productCollect2 =
				#{record.productcollect2,jdbcType=VARCHAR},
			</if>
			<if test="record.productcollect3 != null">
				productCollect3 =
				#{record.productcollect3,jdbcType=VARCHAR},
			</if>
			<if test="record.productcollect4 != null">
				productCollect4 =
				#{record.productcollect4,jdbcType=VARCHAR},
			</if>
			<if test="record.productcollect5 != null">
				productCollect5 =
				#{record.productcollect5,jdbcType=VARCHAR},
			</if>
			<if test="record.productcollect6 != null">
				productCollect6 =
				#{record.productcollect6,jdbcType=VARCHAR},
			</if>
			<if test="record.productcollect7 != null">
				productCollect7 =
				#{record.productcollect7,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update productcollect
		set id = #{record.id,jdbcType=INTEGER},
		users_id =
		#{record.usersId,jdbcType=INTEGER},
		products_id =
		#{record.productsId,jdbcType=INTEGER},
		time =
		#{record.time,jdbcType=DATE},
		productCollect1 =
		#{record.productcollect1,jdbcType=VARCHAR},
		productCollect2 =
		#{record.productcollect2,jdbcType=VARCHAR},
		productCollect3 =
		#{record.productcollect3,jdbcType=VARCHAR},
		productCollect4 =
		#{record.productcollect4,jdbcType=VARCHAR},
		productCollect5 =
		#{record.productcollect5,jdbcType=VARCHAR},
		productCollect6 =
		#{record.productcollect6,jdbcType=VARCHAR},
		productCollect7 =
		#{record.productcollect7,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.older.manager.bean.ProductCollect">
		update productcollect
		<set>
			<if test="usersId != null">
				users_id = #{usersId,jdbcType=INTEGER},
			</if>
			<if test="productsId != null">
				products_id = #{productsId,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=DATE},
			</if>
			<if test="productcollect1 != null">
				productCollect1 = #{productcollect1,jdbcType=VARCHAR},
			</if>
			<if test="productcollect2 != null">
				productCollect2 = #{productcollect2,jdbcType=VARCHAR},
			</if>
			<if test="productcollect3 != null">
				productCollect3 = #{productcollect3,jdbcType=VARCHAR},
			</if>
			<if test="productcollect4 != null">
				productCollect4 = #{productcollect4,jdbcType=VARCHAR},
			</if>
			<if test="productcollect5 != null">
				productCollect5 = #{productcollect5,jdbcType=VARCHAR},
			</if>
			<if test="productcollect6 != null">
				productCollect6 = #{productcollect6,jdbcType=VARCHAR},
			</if>
			<if test="productcollect7 != null">
				productCollect7 = #{productcollect7,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.older.manager.bean.ProductCollect">
		update
		productcollect
		set users_id = #{usersId,jdbcType=INTEGER},
		products_id =
		#{productsId,jdbcType=INTEGER},
		time = #{time,jdbcType=DATE},
		productCollect1 = #{productcollect1,jdbcType=VARCHAR},
		productCollect2
		= #{productcollect2,jdbcType=VARCHAR},
		productCollect3 =
		#{productcollect3,jdbcType=VARCHAR},
		productCollect4 =
		#{productcollect4,jdbcType=VARCHAR},
		productCollect5 =
		#{productcollect5,jdbcType=VARCHAR},
		productCollect6 =
		#{productcollect6,jdbcType=VARCHAR},
		productCollect7 =
		#{productcollect7,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 查询收藏夹的resultMap -->
	<resultMap id="queryProductCollectsMap" type="com.older.manager.bean.ProductCollect">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="users_id" property="usersId" jdbcType="INTEGER" />
		<result column="products_id" property="productsId" jdbcType="INTEGER" />
		<result column="time" property="time" jdbcType="DATE" />
		<result column="productCollect1" property="productcollect1"
			jdbcType="VARCHAR" />
		<result column="productCollect2" property="productcollect2"
			jdbcType="VARCHAR" />
		<result column="productCollect3" property="productcollect3"
			jdbcType="VARCHAR" />
		<result column="productCollect4" property="productcollect4"
			jdbcType="VARCHAR" />
		<result column="productCollect5" property="productcollect5"
			jdbcType="VARCHAR" />
		<result column="productCollect6" property="productcollect6"
			jdbcType="VARCHAR" />
		<result column="productCollect7" property="productcollect7"
			jdbcType="VARCHAR" />
		<association property="products" javaType="com.older.manager.bean.Products">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="name" property="name" jdbcType="VARCHAR" />
			<result column="number" property="number" jdbcType="VARCHAR" />
			<result column="orPrice" property="orprice" jdbcType="DOUBLE" />
			<result column="region" property="region" jdbcType="VARCHAR" />
			<result column="nowPrice" property="nowprice" jdbcType="DOUBLE" />
			<result column="addTime" property="addtime" jdbcType="TIMESTAMP" />
			<result column="auditStatus" property="auditstatus" jdbcType="INTEGER" />
			<result column="state" property="state" jdbcType="INTEGER" />
			<result column="imageTitle" property="imagetitle" jdbcType="VARCHAR" />
			<result column="placeOrigin" property="placeorigin" jdbcType="VARCHAR" />
			<result column="type_id" property="typeId" jdbcType="INTEGER" />
			<result column="brand_id" property="brandId" jdbcType="INTEGER" />
			<result column="texture" property="texture" jdbcType="VARCHAR" />
			<result column="weight" property="weight" jdbcType="DOUBLE" />
			<result column="unit" property="unit" jdbcType="VARCHAR" />
			<result column="synopsis" property="synopsis" jdbcType="VARCHAR" />
			<result column="images" property="images" jdbcType="LONGVARCHAR" />
			<result column="description" property="description" jdbcType="VARCHAR" />
			<result column="inventory" property="inventory" jdbcType="INTEGER" />
			<result column="sales" property="sales" jdbcType="INTEGER" />
			<result column="paral1" property="paral1" jdbcType="VARCHAR" />
			<result column="paral2" property="paral2" jdbcType="VARCHAR" />
			<result column="paral3" property="paral3" jdbcType="VARCHAR" />
			<result column="paral4" property="paral4" jdbcType="VARCHAR" />
			<result column="paral5" property="paral5" jdbcType="VARCHAR" />
			<result column="paral6" property="paral6" jdbcType="VARCHAR" />
			<result column="paral7" property="paral7" jdbcType="VARCHAR" />
			<result column="paral8" property="paral8" jdbcType="VARCHAR" />
			<result column="paral9" property="paral9" jdbcType="VARCHAR" />
			<result column="paral10" property="paral10" jdbcType="VARCHAR" />
			<result column="paral11" property="paral11" jdbcType="DOUBLE" />
			<result column="paral12" property="paral12" jdbcType="DOUBLE" />
			<result column="paral13" property="paral13" jdbcType="DOUBLE" />
			<result column="paral14" property="paral14" jdbcType="DOUBLE" />
			<result column="paral15" property="paral15" jdbcType="DOUBLE" />
			<result column="paral16" property="paral16" jdbcType="DOUBLE" />
			<result column="paral17" property="paral17" jdbcType="DOUBLE" />
		</association>
		<association property="users" javaType="com.older.manager.bean.Users">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="account" property="account" jdbcType="VARCHAR" />
			<result column="password" property="password" jdbcType="VARCHAR" />
			<result column="nickname" property="nickname" jdbcType="VARCHAR" />
			<result column="loginIp" property="loginip" jdbcType="VARCHAR" />
			<result column="loginTime" property="logintime" jdbcType="TIMESTAMP" />
			<result column="realName" property="realname" jdbcType="VARCHAR" />
			<result column="phone" property="phone" jdbcType="VARCHAR" />
			<result column="idCard" property="idcard" jdbcType="VARCHAR" />
			<result column="email" property="email" jdbcType="VARCHAR" />
			<result column="sex" property="sex" jdbcType="VARCHAR" />
			<result column="column3" property="column3" jdbcType="DOUBLE" />
			<result column="coumn4" property="coumn4" jdbcType="INTEGER" />
			<result column="column5" property="column5" jdbcType="VARCHAR" />
			<result column="column6" property="column6" jdbcType="VARCHAR" />
			<result column="column7" property="column7" jdbcType="VARCHAR" />
		</association>
	</resultMap>
	<!-- 查询收藏夹 -->
	<select id="queryProductCollects" parameterType="int"
		resultMap="queryProductCollectsMap">
		select pc.id,pc.products_id,pc.users_id,
		p.id, p.name,
		p.number, p.orPrice,
		p.region, p.nowPrice,
		p.addTime,
		p.auditStatus,
		p.state, p.imageTitle,
		p.placeOrigin,
		p.brand_id,p.type_id, p.texture,
		p.weight, p.unit,
		p.synopsis,
		p.description, p.inventory,
		p.sales,p.images,
		u.id,u.nickname
		from productcollect pc join users u
		join products p on
		pc.products_id=p.id and pc.users_id=u.id
	</select>
</mapper>