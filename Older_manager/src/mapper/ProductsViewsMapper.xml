<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.older.manager.mapper.ProductsViewsMapper">
	<resultMap id="BaseResultMap" type="com.older.manager.bean.ProductsViews">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="users_id" property="usersId" jdbcType="INTEGER" />
		<result column="products_id" property="productsId" jdbcType="INTEGER" />
		<result column="viewTime" property="viewtime" jdbcType="TIMESTAMP" />
		<result column="buyState" property="buystate" jdbcType="VARCHAR" />
		<result column="param1" property="param1" jdbcType="VARCHAR" />
		<result column="param2" property="param2" jdbcType="VARCHAR" />
		<result column="param3" property="param3" jdbcType="VARCHAR" />
		<result column="param4" property="param4" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, users_id, products_id, viewTime, buyState, param1,
		param2, param3,
		param4
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.older.manager.bean.ProductsViewsExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from productsviews
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from productsviews
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		productsviews
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.older.manager.bean.ProductsViewsExample">
		delete from productsviews
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.older.manager.bean.ProductsViews">
		insert into productsviews (id,
		users_id, products_id,
		viewTime, buyState, param1,
		param2, param3,
		param4
		)
		values (#{id,jdbcType=INTEGER}, #{usersId,jdbcType=INTEGER},
		#{productsId,jdbcType=INTEGER},
		#{viewtime,jdbcType=TIMESTAMP},
		#{buystate,jdbcType=VARCHAR}, #{param1,jdbcType=VARCHAR},
		#{param2,jdbcType=VARCHAR}, #{param3,jdbcType=VARCHAR},
		#{param4,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.older.manager.bean.ProductsViews">
		insert into productsviews
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="usersId != null">
				users_id,
			</if>
			<if test="productsId != null">
				products_id,
			</if>
			<if test="viewtime != null">
				viewTime,
			</if>
			<if test="buystate != null">
				buyState,
			</if>
			<if test="param1 != null">
				param1,
			</if>
			<if test="param2 != null">
				param2,
			</if>
			<if test="param3 != null">
				param3,
			</if>
			<if test="param4 != null">
				param4,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="usersId != null">
				#{usersId,jdbcType=INTEGER},
			</if>
			<if test="productsId != null">
				#{productsId,jdbcType=INTEGER},
			</if>
			<if test="viewtime != null">
				#{viewtime,jdbcType=TIMESTAMP},
			</if>
			<if test="buystate != null">
				#{buystate,jdbcType=VARCHAR},
			</if>
			<if test="param1 != null">
				#{param1,jdbcType=VARCHAR},
			</if>
			<if test="param2 != null">
				#{param2,jdbcType=VARCHAR},
			</if>
			<if test="param3 != null">
				#{param3,jdbcType=VARCHAR},
			</if>
			<if test="param4 != null">
				#{param4,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.older.manager.bean.ProductsViewsExample"
		resultType="java.lang.Integer">
		select count(*) from productsviews
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update productsviews
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.usersId != null">
				users_id = #{record.usersId,jdbcType=INTEGER},
			</if>
			<if test="record.productsId != null">
				products_id = #{record.productsId,jdbcType=INTEGER},
			</if>
			<if test="record.viewtime != null">
				viewTime = #{record.viewtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.buystate != null">
				buyState = #{record.buystate,jdbcType=VARCHAR},
			</if>
			<if test="record.param1 != null">
				param1 = #{record.param1,jdbcType=VARCHAR},
			</if>
			<if test="record.param2 != null">
				param2 = #{record.param2,jdbcType=VARCHAR},
			</if>
			<if test="record.param3 != null">
				param3 = #{record.param3,jdbcType=VARCHAR},
			</if>
			<if test="record.param4 != null">
				param4 = #{record.param4,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update productsviews
		set id = #{record.id,jdbcType=INTEGER},
		users_id =
		#{record.usersId,jdbcType=INTEGER},
		products_id =
		#{record.productsId,jdbcType=INTEGER},
		viewTime =
		#{record.viewtime,jdbcType=TIMESTAMP},
		buyState =
		#{record.buystate,jdbcType=VARCHAR},
		param1 =
		#{record.param1,jdbcType=VARCHAR},
		param2 =
		#{record.param2,jdbcType=VARCHAR},
		param3 =
		#{record.param3,jdbcType=VARCHAR},
		param4 =
		#{record.param4,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.older.manager.bean.ProductsViews">
		update productsviews
		<set>
			<if test="usersId != null">
				users_id = #{usersId,jdbcType=INTEGER},
			</if>
			<if test="productsId != null">
				products_id = #{productsId,jdbcType=INTEGER},
			</if>
			<if test="viewtime != null">
				viewTime = #{viewtime,jdbcType=TIMESTAMP},
			</if>
			<if test="buystate != null">
				buyState = #{buystate,jdbcType=VARCHAR},
			</if>
			<if test="param1 != null">
				param1 = #{param1,jdbcType=VARCHAR},
			</if>
			<if test="param2 != null">
				param2 = #{param2,jdbcType=VARCHAR},
			</if>
			<if test="param3 != null">
				param3 = #{param3,jdbcType=VARCHAR},
			</if>
			<if test="param4 != null">
				param4 = #{param4,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.older.manager.bean.ProductsViews">
		update
		productsviews
		set users_id = #{usersId,jdbcType=INTEGER},
		products_id =
		#{productsId,jdbcType=INTEGER},
		viewTime =
		#{viewtime,jdbcType=TIMESTAMP},
		buyState =
		#{buystate,jdbcType=VARCHAR},
		param1 = #{param1,jdbcType=VARCHAR},
		param2 = #{param2,jdbcType=VARCHAR},
		param3 =
		#{param3,jdbcType=VARCHAR},
		param4 = #{param4,jdbcType=VARCHAR}
		where id
		= #{id,jdbcType=INTEGER}
	</update>
	<select id="selectProductsViewsCountByUsersId" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		select count(*) from productsviews
		where users_id =
		#{userId,jdbcType=INTEGER}
	</select>

	<!-- 查询浏览记录、用户信息、产品情况的resultMap -->
	<resultMap type="com.older.manager.bean.ProductsViews" id="selectProductsViewsMap">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="users_id" property="usersId" jdbcType="INTEGER" />
		<result column="products_id" property="productsId" jdbcType="INTEGER" />
		<result column="viewTime" property="viewtime" jdbcType="TIMESTAMP" />
		<result column="buyState" property="buystate" jdbcType="VARCHAR" />
		<result column="param1" property="param1" jdbcType="VARCHAR" />
		<result column="param2" property="param2" jdbcType="VARCHAR" />
		<result column="param3" property="param3" jdbcType="VARCHAR" />
		<result column="param4" property="param4" jdbcType="VARCHAR" />
		<association property="users" javaType="com.older.manager.bean.Users">
			<id column="id" property="id" />
			<result column="account" property="account" />
			<result column="nickname" property="nickname" />
		</association>
		<association property="products" javaType="com.older.manager.bean.Products">
			<id column="id" property="id" />
			<result column="name" property="name" />
			<result column="images" property="images" />
			<result column="imageTitle" property="imagetitle" />
			<result column="orprice" property="orprice" />
			<result column="nowprice" property="nowprice" />
		</association>
	</resultMap>

	<!-- 查询浏览记录、用户信息、产品情况 -->
	<select id="selectProductsViews" resultMap="selectProductsViewsMap">
		select
		<include refid="select_Products_Views_list" />
		from productsviews pv join users u join products p on
		pv.users_id=u.id
		and pv.products_id=p.id
	</select>
	<sql id="select_Products_Views_list">
		pv.id, pv.users_id, pv.products_id,pv.viewTime,
		pv.buyState, pv.param1,
		pv.param2, pv.param3,
		pv.param4,u.id,u.account,u.nickname,
		p.id,p.name,p.imageTitle,p.orprice,p.nowprice,p.images
	</sql>
</mapper>