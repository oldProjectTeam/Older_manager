<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.older.manager.mapper.SystemLogMapper" >
  <resultMap id="BaseResultMap" type="com.older.manager.bean.SystemLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="companyName" property="companyname" jdbcType="VARCHAR" />
    <result column="roleName" property="rolename" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="loginTime" property="logintime" jdbcType="VARCHAR" />
    <result column="loginCount" property="logincount" jdbcType="INTEGER" />
    <result column="loginDescription" property="logindescription" jdbcType="VARCHAR" />
    <result column="loginType" property="logintype" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userName, companyName, roleName, ip, loginTime, loginCount, loginDescription, 
    loginType
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.older.manager.bean.SystemLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from systemlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from systemlog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from systemlog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.older.manager.bean.SystemLogExample" >
    delete from systemlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.older.manager.bean.SystemLog" >
    insert into systemlog (id, userName, companyName, 
      roleName, ip, loginTime, 
      loginCount, loginDescription, loginType
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{companyname,jdbcType=VARCHAR}, 
      #{rolename,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{logintime,jdbcType=VARCHAR}, 
      #{logincount,jdbcType=INTEGER}, #{logindescription,jdbcType=VARCHAR}, #{logintype,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.older.manager.bean.SystemLog" >
    insert into systemlog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="companyname != null" >
        companyName,
      </if>
      <if test="rolename != null" >
        roleName,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="logintime != null" >
        loginTime,
      </if>
      <if test="logincount != null" >
        loginCount,
      </if>
      <if test="logindescription != null" >
        loginDescription,
      </if>
      <if test="logintype != null" >
        loginType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="companyname != null" >
        #{companyname,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        #{logintime,jdbcType=VARCHAR},
      </if>
      <if test="logincount != null" >
        #{logincount,jdbcType=INTEGER},
      </if>
      <if test="logindescription != null" >
        #{logindescription,jdbcType=VARCHAR},
      </if>
      <if test="logintype != null" >
        #{logintype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.older.manager.bean.SystemLogExample" resultType="java.lang.Integer" >
    select count(*) from systemlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update systemlog
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.companyname != null" >
        companyName = #{record.companyname,jdbcType=VARCHAR},
      </if>
      <if test="record.rolename != null" >
        roleName = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.logintime != null" >
        loginTime = #{record.logintime,jdbcType=VARCHAR},
      </if>
      <if test="record.logincount != null" >
        loginCount = #{record.logincount,jdbcType=INTEGER},
      </if>
      <if test="record.logindescription != null" >
        loginDescription = #{record.logindescription,jdbcType=VARCHAR},
      </if>
      <if test="record.logintype != null" >
        loginType = #{record.logintype,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update systemlog
    set id = #{record.id,jdbcType=INTEGER},
      userName = #{record.username,jdbcType=VARCHAR},
      companyName = #{record.companyname,jdbcType=VARCHAR},
      roleName = #{record.rolename,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      loginTime = #{record.logintime,jdbcType=VARCHAR},
      loginCount = #{record.logincount,jdbcType=INTEGER},
      loginDescription = #{record.logindescription,jdbcType=VARCHAR},
      loginType = #{record.logintype,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.older.manager.bean.SystemLog" >
    update systemlog
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="companyname != null" >
        companyName = #{companyname,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        roleName = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        loginTime = #{logintime,jdbcType=VARCHAR},
      </if>
      <if test="logincount != null" >
        loginCount = #{logincount,jdbcType=INTEGER},
      </if>
      <if test="logindescription != null" >
        loginDescription = #{logindescription,jdbcType=VARCHAR},
      </if>
      <if test="logintype != null" >
        loginType = #{logintype,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.older.manager.bean.SystemLog" >
    update systemlog
    set userName = #{username,jdbcType=VARCHAR},
      companyName = #{companyname,jdbcType=VARCHAR},
      roleName = #{rolename,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      loginTime = #{logintime,jdbcType=VARCHAR},
      loginCount = #{logincount,jdbcType=INTEGER},
      loginDescription = #{logindescription,jdbcType=VARCHAR},
      loginType = #{logintype,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>