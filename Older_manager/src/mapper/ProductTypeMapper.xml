<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.older.manager.mapper.ProductTypeMapper">
	<resultMap id="BaseResultMap" type="com.older.manager.bean.ProductType">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="sort" property="sort" jdbcType="INTEGER" />
		<result column="parentId" property="parentid" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="grade" property="grade" jdbcType="INTEGER" />
		<result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="type1" property="type1" jdbcType="VARCHAR" />
		<result column="type2" property="type2" jdbcType="VARCHAR" />
		<result column="type3" property="type3" jdbcType="VARCHAR" />
		<result column="type4" property="type4" jdbcType="DOUBLE" />
		<result column="type5" property="type5" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.older.manager.bean.ProductType"
		extends="BaseResultMap">
		<result column="remark" property="remark" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, sort, parentId, state, grade, createTime, type1,
		type2, type3,
		type4, type5
	</sql>
	<sql id="Blob_Column_List">
		remark
	</sql>
	<select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
		parameterType="com.older.manager.bean.ProductTypeExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from producttype
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		order by id DESC
	</select>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.older.manager.bean.ProductTypeExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from producttype
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from producttype
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		producttype
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.older.manager.bean.ProductTypeExample">
		delete from producttype
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.older.manager.bean.ProductType">
		insert into producttype (id,
		name, sort,
		parentId, state, grade,
		createTime, type1, type2,
		type3,
		type4, type5,
		remark)
		values (#{id,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{sort,jdbcType=INTEGER},
		#{parentid,jdbcType=INTEGER}, #{state,jdbcType=INTEGER},
		#{grade,jdbcType=INTEGER},
		#{createtime,jdbcType=TIMESTAMP},
		#{type1,jdbcType=VARCHAR},
		#{type2,jdbcType=VARCHAR},
		#{type3,jdbcType=VARCHAR}, #{type4,jdbcType=DOUBLE},
		#{type5,jdbcType=INTEGER},
		#{remark,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.older.manager.bean.ProductType">
		insert into producttype
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="sort != null">
				sort,
			</if>
			<if test="parentid != null">
				parentId,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="grade != null">
				grade,
			</if>
			<if test="createtime != null">
				createTime,
			</if>
			<if test="type1 != null">
				type1,
			</if>
			<if test="type2 != null">
				type2,
			</if>
			<if test="type3 != null">
				type3,
			</if>
			<if test="type4 != null">
				type4,
			</if>
			<if test="type5 != null">
				type5,
			</if>
			<if test="remark != null">
				remark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=INTEGER},
			</if>
			<if test="parentid != null">
				#{parentid,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="grade != null">
				#{grade,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="type1 != null">
				#{type1,jdbcType=VARCHAR},
			</if>
			<if test="type2 != null">
				#{type2,jdbcType=VARCHAR},
			</if>
			<if test="type3 != null">
				#{type3,jdbcType=VARCHAR},
			</if>
			<if test="type4 != null">
				#{type4,jdbcType=DOUBLE},
			</if>
			<if test="type5 != null">
				#{type5,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.older.manager.bean.ProductTypeExample"
		resultType="java.lang.Integer">
		select count(*) from producttype
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update producttype
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.sort != null">
				sort = #{record.sort,jdbcType=INTEGER},
			</if>
			<if test="record.parentid != null">
				parentId = #{record.parentid,jdbcType=INTEGER},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
			<if test="record.grade != null">
				grade = #{record.grade,jdbcType=INTEGER},
			</if>
			<if test="record.createtime != null">
				createTime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.type1 != null">
				type1 = #{record.type1,jdbcType=VARCHAR},
			</if>
			<if test="record.type2 != null">
				type2 = #{record.type2,jdbcType=VARCHAR},
			</if>
			<if test="record.type3 != null">
				type3 = #{record.type3,jdbcType=VARCHAR},
			</if>
			<if test="record.type4 != null">
				type4 = #{record.type4,jdbcType=DOUBLE},
			</if>
			<if test="record.type5 != null">
				type5 = #{record.type5,jdbcType=INTEGER},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update producttype
		set id = #{record.id,jdbcType=INTEGER},
		name =
		#{record.name,jdbcType=VARCHAR},
		sort =
		#{record.sort,jdbcType=INTEGER},
		parentId =
		#{record.parentid,jdbcType=INTEGER},
		state =
		#{record.state,jdbcType=INTEGER},
		grade =
		#{record.grade,jdbcType=INTEGER},
		createTime =
		#{record.createtime,jdbcType=TIMESTAMP},
		type1 =
		#{record.type1,jdbcType=VARCHAR},
		type2 =
		#{record.type2,jdbcType=VARCHAR},
		type3 =
		#{record.type3,jdbcType=VARCHAR},
		type4 =
		#{record.type4,jdbcType=DOUBLE},
		type5 =
		#{record.type5,jdbcType=INTEGER},
		remark =
		#{record.remark,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update producttype
		set id = #{record.id,jdbcType=INTEGER},
		name =
		#{record.name,jdbcType=VARCHAR},
		sort =
		#{record.sort,jdbcType=INTEGER},
		parentId =
		#{record.parentid,jdbcType=INTEGER},
		state =
		#{record.state,jdbcType=INTEGER},
		grade =
		#{record.grade,jdbcType=INTEGER},
		createTime =
		#{record.createtime,jdbcType=TIMESTAMP},
		type1 =
		#{record.type1,jdbcType=VARCHAR},
		type2 =
		#{record.type2,jdbcType=VARCHAR},
		type3 =
		#{record.type3,jdbcType=VARCHAR},
		type4 =
		#{record.type4,jdbcType=DOUBLE},
		type5 =
		#{record.type5,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.older.manager.bean.ProductType">
		update producttype
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				sort = #{sort,jdbcType=INTEGER},
			</if>
			<if test="parentid != null">
				parentId = #{parentid,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="grade != null">
				grade = #{grade,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				createTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="type1 != null">
				type1 = #{type1,jdbcType=VARCHAR},
			</if>
			<if test="type2 != null">
				type2 = #{type2,jdbcType=VARCHAR},
			</if>
			<if test="type3 != null">
				type3 = #{type3,jdbcType=VARCHAR},
			</if>
			<if test="type4 != null">
				type4 = #{type4,jdbcType=DOUBLE},
			</if>
			<if test="type5 != null">
				type5 = #{type5,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.older.manager.bean.ProductType">
		update
		producttype
		set name = #{name,jdbcType=VARCHAR},
		sort =
		#{sort,jdbcType=INTEGER},
		parentId = #{parentid,jdbcType=INTEGER},
		state = #{state,jdbcType=INTEGER},
		grade = #{grade,jdbcType=INTEGER},
		createTime = #{createtime,jdbcType=TIMESTAMP},
		type1 =
		#{type1,jdbcType=VARCHAR},
		type2 = #{type2,jdbcType=VARCHAR},
		type3 =
		#{type3,jdbcType=VARCHAR},
		type4 = #{type4,jdbcType=DOUBLE},
		type5 =
		#{type5,jdbcType=INTEGER},
		remark = #{remark,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.older.manager.bean.ProductType">
		update producttype
		set name = #{name,jdbcType=VARCHAR},
		sort = #{sort,jdbcType=INTEGER},
		parentId = #{parentid,jdbcType=INTEGER},
		state =
		#{state,jdbcType=INTEGER},
		grade = #{grade,jdbcType=INTEGER},
		createTime = #{createtime,jdbcType=TIMESTAMP},
		type1 =
		#{type1,jdbcType=VARCHAR},
		type2 = #{type2,jdbcType=VARCHAR},
		type3 =
		#{type3,jdbcType=VARCHAR},
		type4 = #{type4,jdbcType=DOUBLE},
		type5 =
		#{type5,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 新加的 -->
	<select id="selectAllProductsTypeByComplexSearch" resultMap="ResultMapWithBLOBs"
		parameterType="com.older.manager.bean.Products">
		select distinct pt.* from products p,brand b,productKeyword
		pk,productType pt
		where p.type_id=pt.id and p.brand_id=b.id and
		p.id=pk.product_id
		and
		p.state=1
		<if test="name!=null and name!=''">
			and p.name like '%${name}%'
		</if>
		<if test="brand!=null">
			<if test="brand.name!=null and brand.name!=''">
				and b.name = #{brand.name}
			</if>
		</if>
		<if test="productType!=null">
			<if test="productType.name!=null and productType.name!=''">
				and py.name= #{productType.name}
			</if>
		</if>
		<if test="productKeyword!=null">
			<if test="productKeyword.keyword!=null and productKeyword.keyword!=''">
				and pk.keyword like '%${productKeyword.keyword}%'
			</if>
		</if>
		
		<if test="nowprice!=null">
			order by p.nowPrice asc
		</if>
		<if test="sales!=null">
			order by p.sales desc
		</if>
	</select>
</mapper>