<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.older.manager.mapper.OrdersMapper">
	<resultMap id="BaseResultMap" type="com.older.manager.bean.Orders">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="transactionId" property="transactionid"
			jdbcType="VARCHAR" />
		<result column="subject" property="subject" jdbcType="VARCHAR" />
		<result column="cost" property="cost" jdbcType="DOUBLE" />
		<result column="num" property="num" jdbcType="INTEGER" />
		<result column="body" property="body" jdbcType="VARCHAR" />
		<result column="payType" property="paytype" jdbcType="VARCHAR" />
		<result column="creatTime" property="creattime" jdbcType="DATE" />
		<result column="shipper" property="shipper" jdbcType="VARCHAR" />
		<result column="shipperPhone" property="shipperphone" jdbcType="VARCHAR" />
		<result column="formulaWay" property="formulaway" jdbcType="VARCHAR" />
		<result column="shippingAddress_id" property="shippingaddressId"
			jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="freight" property="freight" jdbcType="DOUBLE" />
		<result column="orders1" property="orders1" jdbcType="VARCHAR" />
		<result column="orders2" property="orders2" jdbcType="VARCHAR" />
		<result column="orders3" property="orders3" jdbcType="VARCHAR" />
		<result column="orders4" property="orders4" jdbcType="VARCHAR" />
		<result column="orders5" property="orders5" jdbcType="VARCHAR" />
		<result column="orders6" property="orders6" jdbcType="VARCHAR" />
		<result column="orders7" property="orders7" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, order_no, transactionId, subject, cost, num, body, payType,
		creatTime, shipper,
		shipperPhone, formulaWay, shippingAddress_id, user_id, state, freight, orders1,
		orders2,
		orders3, orders4, orders5, orders6, orders7
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.older.manager.bean.OrdersExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from orders
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		order by id DESC
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from orders
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from orders
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.older.manager.bean.OrdersExample">
		delete from orders
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.older.manager.bean.Orders">
		insert into orders (id, order_no, transactionId,
		subject, cost, num,
		body, payType, creatTime,
		shipper, shipperPhone, formulaWay,
		shippingAddress_id, user_id, state,
		freight, orders1, orders2,
		orders3, orders4, orders5,
		orders6, orders7)
		values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR},
		#{transactionid,jdbcType=VARCHAR},
		#{subject,jdbcType=VARCHAR}, #{cost,jdbcType=DOUBLE}, #{num,jdbcType=INTEGER},
		#{body,jdbcType=VARCHAR}, #{paytype,jdbcType=VARCHAR},
		#{creattime,jdbcType=DATE},
		#{shipper,jdbcType=VARCHAR}, #{shipperphone,jdbcType=VARCHAR}, #{formulaway,jdbcType=VARCHAR},
		#{shippingaddressId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
		#{state,jdbcType=VARCHAR},
		#{freight,jdbcType=DOUBLE}, #{orders1,jdbcType=VARCHAR}, #{orders2,jdbcType=VARCHAR},
		#{orders3,jdbcType=VARCHAR}, #{orders4,jdbcType=VARCHAR},
		#{orders5,jdbcType=VARCHAR},
		#{orders6,jdbcType=VARCHAR}, #{orders7,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.older.manager.bean.Orders" keyProperty="id" useGeneratedKeys="true">
		insert into orders
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="orderNo != null">
				order_no,
			</if>
			<if test="transactionid != null">
				transactionId,
			</if>
			<if test="subject != null">
				subject,
			</if>
			<if test="cost != null">
				cost,
			</if>
			<if test="num != null">
				num,
			</if>
			<if test="body != null">
				body,
			</if>
			<if test="paytype != null">
				payType,
			</if>
			<if test="creattime != null">
				creatTime,
			</if>
			<if test="shipper != null">
				shipper,
			</if>
			<if test="shipperphone != null">
				shipperPhone,
			</if>
			<if test="formulaway != null">
				formulaWay,
			</if>
			<if test="shippingaddressId != null">
				shippingAddress_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="freight != null">
				freight,
			</if>
			<if test="orders1 != null">
				orders1,
			</if>
			<if test="orders2 != null">
				orders2,
			</if>
			<if test="orders3 != null">
				orders3,
			</if>
			<if test="orders4 != null">
				orders4,
			</if>
			<if test="orders5 != null">
				orders5,
			</if>
			<if test="orders6 != null">
				orders6,
			</if>
			<if test="orders7 != null">
				orders7,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="orderNo != null">
				#{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="transactionid != null">
				#{transactionid,jdbcType=VARCHAR},
			</if>
			<if test="subject != null">
				#{subject,jdbcType=VARCHAR},
			</if>
			<if test="cost != null">
				#{cost,jdbcType=DOUBLE},
			</if>
			<if test="num != null">
				#{num,jdbcType=INTEGER},
			</if>
			<if test="body != null">
				#{body,jdbcType=VARCHAR},
			</if>
			<if test="paytype != null">
				#{paytype,jdbcType=VARCHAR},
			</if>
			<if test="creattime != null">
				#{creattime,jdbcType=DATE},
			</if>
			<if test="shipper != null">
				#{shipper,jdbcType=VARCHAR},
			</if>
			<if test="shipperphone != null">
				#{shipperphone,jdbcType=VARCHAR},
			</if>
			<if test="formulaway != null">
				#{formulaway,jdbcType=VARCHAR},
			</if>
			<if test="shippingaddressId != null">
				#{shippingaddressId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=VARCHAR},
			</if>
			<if test="freight != null">
				#{freight,jdbcType=DOUBLE},
			</if>
			<if test="orders1 != null">
				#{orders1,jdbcType=VARCHAR},
			</if>
			<if test="orders2 != null">
				#{orders2,jdbcType=VARCHAR},
			</if>
			<if test="orders3 != null">
				#{orders3,jdbcType=VARCHAR},
			</if>
			<if test="orders4 != null">
				#{orders4,jdbcType=VARCHAR},
			</if>
			<if test="orders5 != null">
				#{orders5,jdbcType=VARCHAR},
			</if>
			<if test="orders6 != null">
				#{orders6,jdbcType=VARCHAR},
			</if>
			<if test="orders7 != null">
				#{orders7,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.older.manager.bean.OrdersExample"
		resultType="java.lang.Integer">
		select count(*) from orders
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update orders
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.orderNo != null">
				order_no = #{record.orderNo,jdbcType=VARCHAR},
			</if>
			<if test="record.transactionid != null">
				transactionId = #{record.transactionid,jdbcType=VARCHAR},
			</if>
			<if test="record.subject != null">
				subject = #{record.subject,jdbcType=VARCHAR},
			</if>
			<if test="record.cost != null">
				cost = #{record.cost,jdbcType=DOUBLE},
			</if>
			<if test="record.num != null">
				num = #{record.num,jdbcType=INTEGER},
			</if>
			<if test="record.body != null">
				body = #{record.body,jdbcType=VARCHAR},
			</if>
			<if test="record.paytype != null">
				payType = #{record.paytype,jdbcType=VARCHAR},
			</if>
			<if test="record.creattime != null">
				creatTime = #{record.creattime,jdbcType=DATE},
			</if>
			<if test="record.shipper != null">
				shipper = #{record.shipper,jdbcType=VARCHAR},
			</if>
			<if test="record.shipperphone != null">
				shipperPhone = #{record.shipperphone,jdbcType=VARCHAR},
			</if>
			<if test="record.formulaway != null">
				formulaWay = #{record.formulaway,jdbcType=VARCHAR},
			</if>
			<if test="record.shippingaddressId != null">
				shippingAddress_id = #{record.shippingaddressId,jdbcType=INTEGER},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=VARCHAR},
			</if>
			<if test="record.freight != null">
				freight = #{record.freight,jdbcType=DOUBLE},
			</if>
			<if test="record.orders1 != null">
				orders1 = #{record.orders1,jdbcType=VARCHAR},
			</if>
			<if test="record.orders2 != null">
				orders2 = #{record.orders2,jdbcType=VARCHAR},
			</if>
			<if test="record.orders3 != null">
				orders3 = #{record.orders3,jdbcType=VARCHAR},
			</if>
			<if test="record.orders4 != null">
				orders4 = #{record.orders4,jdbcType=VARCHAR},
			</if>
			<if test="record.orders5 != null">
				orders5 = #{record.orders5,jdbcType=VARCHAR},
			</if>
			<if test="record.orders6 != null">
				orders6 = #{record.orders6,jdbcType=VARCHAR},
			</if>
			<if test="record.orders7 != null">
				orders7 = #{record.orders7,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update orders
		set id = #{record.id,jdbcType=INTEGER},
		order_no = #{record.orderNo,jdbcType=VARCHAR},
		transactionId = #{record.transactionid,jdbcType=VARCHAR},
		subject = #{record.subject,jdbcType=VARCHAR},
		cost = #{record.cost,jdbcType=DOUBLE},
		num = #{record.num,jdbcType=INTEGER},
		body = #{record.body,jdbcType=VARCHAR},
		payType = #{record.paytype,jdbcType=VARCHAR},
		creatTime = #{record.creattime,jdbcType=DATE},
		shipper = #{record.shipper,jdbcType=VARCHAR},
		shipperPhone = #{record.shipperphone,jdbcType=VARCHAR},
		formulaWay = #{record.formulaway,jdbcType=VARCHAR},
		shippingAddress_id = #{record.shippingaddressId,jdbcType=INTEGER},
		user_id = #{record.userId,jdbcType=INTEGER},
		state = #{record.state,jdbcType=VARCHAR},
		freight = #{record.freight,jdbcType=DOUBLE},
		orders1 = #{record.orders1,jdbcType=VARCHAR},
		orders2 = #{record.orders2,jdbcType=VARCHAR},
		orders3 = #{record.orders3,jdbcType=VARCHAR},
		orders4 = #{record.orders4,jdbcType=VARCHAR},
		orders5 = #{record.orders5,jdbcType=VARCHAR},
		orders6 = #{record.orders6,jdbcType=VARCHAR},
		orders7 = #{record.orders7,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.older.manager.bean.Orders">
		update orders
		<set>
			<if test="orderNo != null">
				order_no = #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="transactionid != null">
				transactionId = #{transactionid,jdbcType=VARCHAR},
			</if>
			<if test="subject != null">
				subject = #{subject,jdbcType=VARCHAR},
			</if>
			<if test="cost != null">
				cost = #{cost,jdbcType=DOUBLE},
			</if>
			<if test="num != null">
				num = #{num,jdbcType=INTEGER},
			</if>
			<if test="body != null">
				body = #{body,jdbcType=VARCHAR},
			</if>
			<if test="paytype != null">
				payType = #{paytype,jdbcType=VARCHAR},
			</if>
			<if test="creattime != null">
				creatTime = #{creattime,jdbcType=DATE},
			</if>
			<if test="shipper != null">
				shipper = #{shipper,jdbcType=VARCHAR},
			</if>
			<if test="shipperphone != null">
				shipperPhone = #{shipperphone,jdbcType=VARCHAR},
			</if>
			<if test="formulaway != null">
				formulaWay = #{formulaway,jdbcType=VARCHAR},
			</if>
			<if test="shippingaddressId != null">
				shippingAddress_id = #{shippingaddressId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=VARCHAR},
			</if>
			<if test="freight != null">
				freight = #{freight,jdbcType=DOUBLE},
			</if>
			<if test="orders1 != null">
				orders1 = #{orders1,jdbcType=VARCHAR},
			</if>
			<if test="orders2 != null">
				orders2 = #{orders2,jdbcType=VARCHAR},
			</if>
			<if test="orders3 != null">
				orders3 = #{orders3,jdbcType=VARCHAR},
			</if>
			<if test="orders4 != null">
				orders4 = #{orders4,jdbcType=VARCHAR},
			</if>
			<if test="orders5 != null">
				orders5 = #{orders5,jdbcType=VARCHAR},
			</if>
			<if test="orders6 != null">
				orders6 = #{orders6,jdbcType=VARCHAR},
			</if>
			<if test="orders7 != null">
				orders7 = #{orders7,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.older.manager.bean.Orders">
		update orders
		set order_no = #{orderNo,jdbcType=VARCHAR},
		transactionId = #{transactionid,jdbcType=VARCHAR},
		subject = #{subject,jdbcType=VARCHAR},
		cost = #{cost,jdbcType=DOUBLE},
		num = #{num,jdbcType=INTEGER},
		body = #{body,jdbcType=VARCHAR},
		payType = #{paytype,jdbcType=VARCHAR},
		creatTime = #{creattime,jdbcType=DATE},
		shipper = #{shipper,jdbcType=VARCHAR},
		shipperPhone = #{shipperphone,jdbcType=VARCHAR},
		formulaWay = #{formulaway,jdbcType=VARCHAR},
		shippingAddress_id = #{shippingaddressId,jdbcType=INTEGER},
		user_id = #{userId,jdbcType=INTEGER},
		state = #{state,jdbcType=VARCHAR},
		freight = #{freight,jdbcType=DOUBLE},
		orders1 = #{orders1,jdbcType=VARCHAR},
		orders2 = #{orders2,jdbcType=VARCHAR},
		orders3 = #{orders3,jdbcType=VARCHAR},
		orders4 = #{orders4,jdbcType=VARCHAR},
		orders5 = #{orders5,jdbcType=VARCHAR},
		orders6 = #{orders6,jdbcType=VARCHAR},
		orders7 = #{orders7,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectProductsCountByUsersId" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		select count(*) from orders
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	
	<!--订单信息和收货信息结果集  -->
	<resultMap id="orderAndAddressResultMap" type="com.older.manager.bean.Orders">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="transactionId" property="transactionid"
			jdbcType="VARCHAR" />
		<result column="subject" property="subject" jdbcType="VARCHAR" />
		<result column="cost" property="cost" jdbcType="DOUBLE" />
		<result column="num" property="num" jdbcType="INTEGER" />
		<result column="body" property="body" jdbcType="VARCHAR" />
		<result column="payType" property="paytype" jdbcType="VARCHAR" />
		<result column="creatTime" property="creattime" jdbcType="DATE" />
		<result column="shipper" property="shipper" jdbcType="VARCHAR" />
		<result column="shipperPhone" property="shipperphone" jdbcType="VARCHAR" />
		<result column="formulaWay" property="formulaway" jdbcType="VARCHAR" />
		<result column="shippingAddress_id" property="shippingaddressId"
			jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="freight" property="freight" jdbcType="DOUBLE" />
		<result column="orders1" property="orders1" jdbcType="VARCHAR" />
		<result column="orders2" property="orders2" jdbcType="VARCHAR" />
		<result column="orders3" property="orders3" jdbcType="VARCHAR" />
		<result column="orders4" property="orders4" jdbcType="VARCHAR" />
		<result column="orders5" property="orders5" jdbcType="VARCHAR" />
		<result column="orders6" property="orders6" jdbcType="VARCHAR" />
		<result column="orders7" property="orders7" jdbcType="VARCHAR" />
		<association property="shippingaddress" javaType="shippingaddress">
			<id column="shippingAddress_id" property="id" jdbcType="INTEGER" />
		    <result column="location" property="location" jdbcType="VARCHAR" />
		    <result column="detailAddress" property="detailaddress" jdbcType="VARCHAR" />
		    <result column="name" property="name" jdbcType="VARCHAR" />
		    <result column="phone" property="phone" jdbcType="VARCHAR" />
		    <result column="postcode" property="postcode" jdbcType="VARCHAR" />	    
		    <result column="user_id" property="userId" jdbcType="INTEGER" />
		</association>
	</resultMap>
	<!--订单信息和收货信息结果集  -->
	<sql id="order_address_Column_List">
		o.id, o.order_no, o.transactionId, o.subject, o.cost, o.num, o.body, o.payType,
		o.creatTime, o.shipper,
		o.shipperPhone, o.formulaWay, o.shippingAddress_id, o.user_id, o.state, o.freight, o.orders1,
		o.orders2,
		o.orders3, o.orders4, o.orders5, o.orders6, o.orders7,
		s.location, s.detailAddress, s.name, s.phone, s.postcode
	</sql>
	<!--通过订单编号，查询订单信息和关联的收货信息  -->
	<select id="selectWithAddressByOrderNo" resultMap="orderAndAddressResultMap"
		parameterType="string">
		select
		<include refid="order_address_Column_List" />
		from orders o,shippingaddress s
		where o.shippingaddress_id=s.id and order_no=#{orderNo}
	</select>
	
	
	<!--订单信息和订单详细信息和产品信息和地址信息结果集  -->
	<resultMap id="orderWithDetailAndProductResultMap" type="com.older.manager.bean.Orders">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="transactionId" property="transactionid"
			jdbcType="VARCHAR" />
		<result column="subject" property="subject" jdbcType="VARCHAR" />
		<result column="cost" property="cost" jdbcType="DOUBLE" />
		<result column="num" property="num" jdbcType="INTEGER" />
		<result column="body" property="body" jdbcType="VARCHAR" />
		<result column="payType" property="paytype" jdbcType="VARCHAR" />
		<result column="creatTime" property="creattime" jdbcType="DATE" />
		<result column="shipper" property="shipper" jdbcType="VARCHAR" />
		<result column="shipperPhone" property="shipperphone" jdbcType="VARCHAR" />
		<result column="formulaWay" property="formulaway" jdbcType="VARCHAR" />
		<result column="shippingAddress_id" property="shippingaddressId"
			jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="freight" property="freight" jdbcType="DOUBLE" />
		<result column="orders1" property="orders1" jdbcType="VARCHAR" />
		<result column="orders2" property="orders2" jdbcType="VARCHAR" />
		<result column="orders3" property="orders3" jdbcType="VARCHAR" />
		<result column="orders4" property="orders4" jdbcType="VARCHAR" />
		<result column="orders5" property="orders5" jdbcType="VARCHAR" />
		<result column="orders6" property="orders6" jdbcType="VARCHAR" />
		<result column="orders7" property="orders7" jdbcType="VARCHAR" />
		<collection property="orderdetails" ofType="Orderdetail">
			<id column="orId" property="id" jdbcType="INTEGER" />
			<result column="detial_number" property="detialNumber"
				jdbcType="VARCHAR" />
			<result column="orderId" property="orderId" jdbcType="INTEGER" />
			<result column="produccts_id" property="producctsId" jdbcType="INTEGER" />
			<result column="producctName" property="producctname" jdbcType="VARCHAR" />
			<result column="basePrice" property="baseprice" jdbcType="DOUBLE" />
			<result column="number" property="number" jdbcType="INTEGER" />
			<association property="product" javaType="products">
				<id column="pId" property="id" jdbcType="INTEGER" />
				<result column="name" property="name" jdbcType="VARCHAR" />
				<result column="nowPrice" property="nowprice" jdbcType="DOUBLE" />
				<result column="imageTitle" property="imagetitle" jdbcType="VARCHAR" />
				<result column="images" property="images" jdbcType="LONGVARCHAR" />
				<result column="inventory" property="inventory" jdbcType="INTEGER" />
				<result column="paral11" property="paral11" jdbcType="DOUBLE" />
			</association>
		</collection>
		<collection property="shippingaddress" ofType="shippingaddress">
			<id column="sId" property="id" jdbcType="INTEGER" />
		    <result column="location" property="location" jdbcType="VARCHAR" />
		    <result column="detailAddress" property="detailaddress" jdbcType="VARCHAR" />
		    <result column="sName" property="name" jdbcType="VARCHAR" />
		    <result column="phone" property="phone" jdbcType="VARCHAR" />
		    <result column="postcode" property="postcode" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	<!--订单信息和订单详细字段  -->
	<sql id="order_detail_product_Column_List">
		o.id, o.order_no, o.transactionId, o.subject, o.cost, o.num, o.body, o.payType,
		o.creatTime, o.shipper,
		o.shipperPhone, o.formulaWay, o.shippingAddress_id, o.user_id, o.state, o.freight, o.orders1,
		o.orders2,
		o.orders3, o.orders4, o.orders5, o.orders6, o.orders7,
		ord.id orId, ord.detial_number, ord.order_id orderId, ord.produccts_id, ord.producctName,
		ord.basePrice,ord.number,
		p.id pId, p.name, p.nowPrice,p.images,p.imageTitle,p.inventory,p.paral11,
		s.id sId,s.location, s.detailAddress, s.name sName, s.phone, s.postcode
	</sql>
	<!--通过订单id查询订单信息和关联的订单详细信息和产品信息和地址信息  -->
	<select id="selectOrderWithDetailById" resultMap="orderWithDetailAndProductResultMap"
		parameterType="Integer">
		select
		<include refid="order_detail_product_Column_List" />
		from orders o,orderdetail ord,products p,shippingaddress s
		where o.id=ord.order_id and p.id=ord.produccts_id and s.id=o.shippingAddress_id and o.id=#{id}
	</select>

	<!--订单信息和产品信息结果集  -->
	<resultMap id="orderAndProductResultMap" type="com.older.manager.bean.Orders">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="creatTime" property="creattime" jdbcType="DATE" />
		<result column="formulaWay" property="formulaway" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="orders3" property="orders3" jdbcType="VARCHAR" />
		<result column="orders4" property="orders4" jdbcType="VARCHAR" />
		<collection property="products" ofType="products">
			<id column="pId" property="id" jdbcType="INTEGER" />
			<result column="name" property="name" jdbcType="VARCHAR" />
			<result column="imageTitle" property="imagetitle" jdbcType="VARCHAR" />
			<result column="images" property="images" jdbcType="LONGVARCHAR" />
		</collection>
		 
	</resultMap>
    <!--订单信息和订单详细字段  -->
	<sql id="order_product_Column_List">
		o.id, o.order_no, 
		o.creatTime,o.formulaWay,o.state, 
		o.orders3, o.orders4, 
		p.id pId, p.name,p.images,p.imageTitle
	</sql>
	<!--通过用户id查询订单信息和产品信息-->
	<select id="orderListByState" resultMap="orderAndProductResultMap"
		parameterType="orders">
		select
		<include refid="order_product_Column_List" />
		from orders o,orderdetail ord,products p,users u
		where u.id=#{userId} and o.state=#{state} and o.user_id=u.id and o.id=ord.order_id and p.id=ord.produccts_id
		order by creatTime desc
	</select>
	
	
	
</mapper>