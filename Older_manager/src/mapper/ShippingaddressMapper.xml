<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.older.manager.mapper.ShippingaddressMapper" >
  <resultMap id="BaseResultMap" type="com.older.manager.bean.Shippingaddress" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="detailAddress" property="detailaddress" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="postcode" property="postcode" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="column1" property="column1" jdbcType="VARCHAR" />
    <result column="column2" property="column2" jdbcType="VARCHAR" />
  </resultMap>
  
  
  
    
  <!-- 带用户的 -->
  <resultMap id="BaseResultMapWithUsers" type="com.older.manager.bean.Shippingaddress" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="detailAddress" property="detailaddress" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="postcode" property="postcode" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="column1" property="column1" jdbcType="VARCHAR" />
    <result column="column2" property="column2" jdbcType="VARCHAR" />
     <association property="users" javaType="com.older.manager.bean.Users">
    	<id column="user_id" property="id" jdbcType="INTEGER" />
    	<result column="realName" property="realname" jdbcType="VARCHAR" />
    	<result column="phone" property="phone" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause" >

  
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  
  
  
  
  
  <sql id="Base_Column_List" >
    id, location, detailAddress, name, phone, postcode, state, user_id, column1, column2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.older.manager.bean.ShippingaddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shippingaddress
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    order by state DESC, id DESC
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from shippingaddress
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    *
    from shippingaddress
    where user_id = #{userid,jdbcType=INTEGER} and state=1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shippingaddress
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.older.manager.bean.ShippingaddressExample" >
    delete from shippingaddress
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.older.manager.bean.Shippingaddress" >
    insert into shippingaddress (id, location, detailAddress, 
      name, phone, postcode, 
      state, user_id, column1, 
      column2)
    values (#{id,jdbcType=INTEGER}, #{location,jdbcType=VARCHAR}, #{detailaddress,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{postcode,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{column1,jdbcType=VARCHAR}, 
      #{column2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.older.manager.bean.Shippingaddress" >
    insert into shippingaddress
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="detailaddress != null" >
        detailAddress,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="postcode != null" >
        postcode,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="column1 != null" >
        column1,
      </if>
      <if test="column2 != null" >
        column2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="detailaddress != null" >
        #{detailaddress,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="column1 != null" >
        #{column1,jdbcType=VARCHAR},
      </if>
      <if test="column2 != null" >
        #{column2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  
  
  
  
  
  
    <!-- 带用户 -->
  <select id="selectByExampleWithUsers" resultMap="BaseResultMapWithUsers" parameterType="com.older.manager.bean.Shippingaddress" >
    select  s.*,u.id,u.realname,u.phone from shippingaddress s,users u where s.user_id=u.id
     and s.user_id = ${userId}
    
  </select>
  <select id="selectByPrimaryKeyWithUsers" resultMap="BaseResultMapWithUsers" parameterType="java.lang.Integer" >
   select  s.*,u.id,u.realname,u.phone from shippingaddress s,users u where s.user_id=u.id
   and s.id = #{id,jdbcType=INTEGER}
  </select>
  
  
  
  
  
  
  
  
  <select id="countByExample" parameterType="com.older.manager.bean.ShippingaddressExample" resultType="java.lang.Integer" >
    select count(*) from shippingaddress
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update shippingaddress
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.detailaddress != null" >
        detailAddress = #{record.detailaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.postcode != null" >
        postcode = #{record.postcode,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.column1 != null" >
        column1 = #{record.column1,jdbcType=VARCHAR},
      </if>
      <if test="record.column2 != null" >
        column2 = #{record.column2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update shippingaddress
    set id = #{record.id,jdbcType=INTEGER},
      location = #{record.location,jdbcType=VARCHAR},
      detailAddress = #{record.detailaddress,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      postcode = #{record.postcode,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      column1 = #{record.column1,jdbcType=VARCHAR},
      column2 = #{record.column2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.older.manager.bean.Shippingaddress" >
    update shippingaddress
    <set >
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="detailaddress != null" >
        detailAddress = #{detailaddress,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        postcode = #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="column1 != null" >
        column1 = #{column1,jdbcType=VARCHAR},
      </if>
      <if test="column2 != null" >
        column2 = #{column2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.older.manager.bean.Shippingaddress" >
    update shippingaddress
    set location = #{location,jdbcType=VARCHAR},
      detailAddress = #{detailaddress,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      postcode = #{postcode,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      column1 = #{column1,jdbcType=VARCHAR},
      column2 = #{column2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>