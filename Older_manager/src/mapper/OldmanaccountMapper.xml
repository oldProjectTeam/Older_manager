<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.older.manager.mapper.OldmanaccountMapper" >
  <resultMap id="BaseResultMap" type="com.older.manager.bean.Oldmanaccount" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="oldMan_id" property="oldmanId" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="loginIP" property="loginip" jdbcType="VARCHAR" />
    <result column="loginTime" property="logintime" jdbcType="TIMESTAMP" />
    <result column="integral" property="integral" jdbcType="TIMESTAMP" />
    <result column="loginCount" property="logincount" jdbcType="INTEGER" />
    <result column="oldManAccount1" property="oldmanaccount1" jdbcType="VARCHAR" />
    <result column="oldManAccount2" property="oldmanaccount2" jdbcType="VARCHAR" />
    <result column="oldManAccount3" property="oldmanaccount3" jdbcType="VARCHAR" />
    <result column="oldManAccount4" property="oldmanaccount4" jdbcType="VARCHAR" />
    <result column="userType" property="usertype" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, oldMan_id, password, account, loginIP, loginTime, integral, loginCount, oldManAccount1, 
    oldManAccount2, oldManAccount3, oldManAccount4, userType
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.older.manager.bean.OldmanaccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oldmanaccount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
   order by id DESC
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from oldmanaccount
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  
  <resultMap id="selectAccountAndOldmanByCondictionResultMap" type="com.older.manager.bean.Oldmanaccount" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="oldMan_id" property="oldmanId" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="loginIP" property="loginip" jdbcType="VARCHAR" />
    <result column="loginTime" property="logintime" jdbcType="TIMESTAMP" />
    <result column="loginCount" property="logincount" jdbcType="INTEGER" />
    <result column="oldManAccount1" property="oldmanaccount1" jdbcType="VARCHAR" />
    <result column="oldManAccount2" property="oldmanaccount2" jdbcType="VARCHAR" />
    <result column="oldManAccount3" property="oldmanaccount3" jdbcType="VARCHAR" />
    <result column="oldManAccount4" property="oldmanaccount4" jdbcType="VARCHAR" />
    <result column="userType" property="usertype" jdbcType="VARCHAR" />
    <association property="oldman" javaType="oldman">
    	<id column="oldmanId" property="id" jdbcType="INTEGER" />
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="sex" property="sex" jdbcType="VARCHAR" />
	    <result column="phone" property="phone" jdbcType="VARCHAR" />
	   	<result column="address" property="address" jdbcType="VARCHAR" />
	   	<result column="service" property="service" jdbcType="VARCHAR" />
	   	<result column="servicestatu" property="servicestatu" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  
  <sql id="account_oldman_Column_List" >
    ac.id, ac.oldMan_id, ac.password, ac.account, ac.loginIP, ac.loginTime, ac.loginCount, ac.oldManAccount1, 
    ac.oldManAccount2, ac.oldManAccount3, ac.oldManAccount4, ac.userType,
    o.id oldmanId,o.name,o.sex,o.address,o.phone,o.service,o.servicestatu
  </sql>
  <!--查询账户信息，关联老人信息，可模糊查询（根据老人姓名、账号）  -->
  <select id="selectAccountAndOldmanByCondiction" resultMap="selectAccountAndOldmanByCondictionResultMap" parameterType="oldmanaccount" >
    select 
    <include refid="account_oldman_Column_List" />
    from oldmanaccount ac,oldman o where ac.oldman_id=o.id
    <if test="oldman!=null and oldman.name!=null and oldman.name!=''">
    	and o.name like '%${oldman.name}%'
    </if>
    <if test="account!=null and account!=''">
    	 and ac.account=#{account}
    </if>
     
  </select>
  
   <!--查询不存在于账户管理表的老人ResultMap  -->
  <resultMap type="com.older.manager.bean.Oldman" id="selectOldManNotAccountResultMap">   	 
   	<id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
   	<result column="address" property="address" jdbcType="VARCHAR" />
   	<result column="service" property="service" jdbcType="VARCHAR" />
  </resultMap>
   
  <!--查询不存在于账户管理表的老人  -->
  <select id="selectOldManNotAccount" resultMap="selectOldManNotAccountResultMap" parameterType="com.older.manager.bean.Oldman">
  	 select o.id, o.name, o.sex, o.phone,o.address,o.service
      
     from oldman o where 
      <if test="name!=null and name!=''">
      	o.name like '%${name}%' and
      </if>
        o.phone not in (
		select account
		from oldmanaccount as ol 
	    )
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oldmanaccount
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.older.manager.bean.OldmanaccountExample" >
    delete from oldmanaccount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.older.manager.bean.Oldmanaccount" >
    insert into oldmanaccount (id, oldMan_id, password, 
      account, loginIP, loginTime, 
      integral, loginCount, oldManAccount1, 
      oldManAccount2, oldManAccount3, oldManAccount4, 
      userType)
    values (#{id,jdbcType=INTEGER}, #{oldmanId,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, 
      #{account,jdbcType=VARCHAR}, #{loginip,jdbcType=VARCHAR}, #{logintime,jdbcType=TIMESTAMP}, 
      #{integral,jdbcType=TIMESTAMP}, #{logincount,jdbcType=INTEGER}, #{oldmanaccount1,jdbcType=VARCHAR}, 
      #{oldmanaccount2,jdbcType=VARCHAR}, #{oldmanaccount3,jdbcType=VARCHAR}, #{oldmanaccount4,jdbcType=VARCHAR}, 
      #{usertype,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.older.manager.bean.Oldmanaccount" >
    insert into oldmanaccount
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="oldmanId != null" >
        oldMan_id,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="loginip != null" >
        loginIP,
      </if>
      <if test="logintime != null" >
        loginTime,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="logincount != null" >
        loginCount,
      </if>
      <if test="oldmanaccount1 != null" >
        oldManAccount1,
      </if>
      <if test="oldmanaccount2 != null" >
        oldManAccount2,
      </if>
      <if test="oldmanaccount3 != null" >
        oldManAccount3,
      </if>
      <if test="oldmanaccount4 != null" >
        oldManAccount4,
      </if>
      <if test="usertype != null" >
        userType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="oldmanId != null" >
        #{oldmanId,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null" >
        #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=TIMESTAMP},
      </if>
      <if test="logincount != null" >
        #{logincount,jdbcType=INTEGER},
      </if>
      <if test="oldmanaccount1 != null" >
        #{oldmanaccount1,jdbcType=VARCHAR},
      </if>
      <if test="oldmanaccount2 != null" >
        #{oldmanaccount2,jdbcType=VARCHAR},
      </if>
      <if test="oldmanaccount3 != null" >
        #{oldmanaccount3,jdbcType=VARCHAR},
      </if>
      <if test="oldmanaccount4 != null" >
        #{oldmanaccount4,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.older.manager.bean.OldmanaccountExample" resultType="java.lang.Integer" >
    select count(*) from oldmanaccount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oldmanaccount
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.oldmanId != null" >
        oldMan_id = #{record.oldmanId,jdbcType=INTEGER},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.loginip != null" >
        loginIP = #{record.loginip,jdbcType=VARCHAR},
      </if>
      <if test="record.logintime != null" >
        loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.integral != null" >
        integral = #{record.integral,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logincount != null" >
        loginCount = #{record.logincount,jdbcType=INTEGER},
      </if>
      <if test="record.oldmanaccount1 != null" >
        oldManAccount1 = #{record.oldmanaccount1,jdbcType=VARCHAR},
      </if>
      <if test="record.oldmanaccount2 != null" >
        oldManAccount2 = #{record.oldmanaccount2,jdbcType=VARCHAR},
      </if>
      <if test="record.oldmanaccount3 != null" >
        oldManAccount3 = #{record.oldmanaccount3,jdbcType=VARCHAR},
      </if>
      <if test="record.oldmanaccount4 != null" >
        oldManAccount4 = #{record.oldmanaccount4,jdbcType=VARCHAR},
      </if>
      <if test="record.usertype != null" >
        userType = #{record.usertype,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oldmanaccount
    set id = #{record.id,jdbcType=INTEGER},
      oldMan_id = #{record.oldmanId,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      loginIP = #{record.loginip,jdbcType=VARCHAR},
      loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      integral = #{record.integral,jdbcType=TIMESTAMP},
      loginCount = #{record.logincount,jdbcType=INTEGER},
      oldManAccount1 = #{record.oldmanaccount1,jdbcType=VARCHAR},
      oldManAccount2 = #{record.oldmanaccount2,jdbcType=VARCHAR},
      oldManAccount3 = #{record.oldmanaccount3,jdbcType=VARCHAR},
      oldManAccount4 = #{record.oldmanaccount4,jdbcType=VARCHAR},
      userType = #{record.usertype,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.older.manager.bean.Oldmanaccount" >
    update oldmanaccount
    <set >
      <if test="oldmanId != null" >
        oldMan_id = #{oldmanId,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null" >
        loginIP = #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        loginTime = #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=TIMESTAMP},
      </if>
      <if test="logincount != null" >
        loginCount = #{logincount,jdbcType=INTEGER},
      </if>
      <if test="oldmanaccount1 != null" >
        oldManAccount1 = #{oldmanaccount1,jdbcType=VARCHAR},
      </if>
      <if test="oldmanaccount2 != null" >
        oldManAccount2 = #{oldmanaccount2,jdbcType=VARCHAR},
      </if>
      <if test="oldmanaccount3 != null" >
        oldManAccount3 = #{oldmanaccount3,jdbcType=VARCHAR},
      </if>
      <if test="oldmanaccount4 != null" >
        oldManAccount4 = #{oldmanaccount4,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        userType = #{usertype,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.older.manager.bean.Oldmanaccount" >
    update oldmanaccount
    set oldMan_id = #{oldmanId,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      loginIP = #{loginip,jdbcType=VARCHAR},
      loginTime = #{logintime,jdbcType=TIMESTAMP},
      integral = #{integral,jdbcType=TIMESTAMP},
      loginCount = #{logincount,jdbcType=INTEGER},
      oldManAccount1 = #{oldmanaccount1,jdbcType=VARCHAR},
      oldManAccount2 = #{oldmanaccount2,jdbcType=VARCHAR},
      oldManAccount3 = #{oldmanaccount3,jdbcType=VARCHAR},
      oldManAccount4 = #{oldmanaccount4,jdbcType=VARCHAR},
      userType = #{usertype,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>