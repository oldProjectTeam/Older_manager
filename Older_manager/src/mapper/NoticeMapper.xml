<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.older.manager.mapper.NoticeMapper" >
  <resultMap id="BaseResultMap" type="com.older.manager.bean.Notice" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="releasePeople" property="releasepeople" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="notice1" property="notice1" jdbcType="VARCHAR" />
    <result column="notice2" property="notice2" jdbcType="VARCHAR" />
    <result column="notice3" property="notice3" jdbcType="VARCHAR" />
    <result column="notice4" property="notice4" jdbcType="VARCHAR" />
    <result column="notice5" property="notice5" jdbcType="VARCHAR" />
    <result column="notice6" property="notice6" jdbcType="VARCHAR" />
    <result column="notice7" property="notice7" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, time, releasePeople, type, content, notice1, notice2, notice3, notice4, 
    notice5, notice6, notice7
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.older.manager.bean.NoticeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    order by id DESC
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.older.manager.bean.NoticeExample" >
    delete from notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.older.manager.bean.Notice" >
    insert into notice (id, title, time, 
      releasePeople, type, content, 
      notice1, notice2, notice3, 
      notice4, notice5, notice6, 
      notice7)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{releasepeople,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{notice1,jdbcType=VARCHAR}, #{notice2,jdbcType=VARCHAR}, #{notice3,jdbcType=VARCHAR}, 
      #{notice4,jdbcType=VARCHAR}, #{notice5,jdbcType=VARCHAR}, #{notice6,jdbcType=VARCHAR}, 
      #{notice7,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.older.manager.bean.Notice" >
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="releasepeople != null" >
        releasePeople,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="notice1 != null" >
        notice1,
      </if>
      <if test="notice2 != null" >
        notice2,
      </if>
      <if test="notice3 != null" >
        notice3,
      </if>
      <if test="notice4 != null" >
        notice4,
      </if>
      <if test="notice5 != null" >
        notice5,
      </if>
      <if test="notice6 != null" >
        notice6,
      </if>
      <if test="notice7 != null" >
        notice7,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="releasepeople != null" >
        #{releasepeople,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="notice1 != null" >
        #{notice1,jdbcType=VARCHAR},
      </if>
      <if test="notice2 != null" >
        #{notice2,jdbcType=VARCHAR},
      </if>
      <if test="notice3 != null" >
        #{notice3,jdbcType=VARCHAR},
      </if>
      <if test="notice4 != null" >
        #{notice4,jdbcType=VARCHAR},
      </if>
      <if test="notice5 != null" >
        #{notice5,jdbcType=VARCHAR},
      </if>
      <if test="notice6 != null" >
        #{notice6,jdbcType=VARCHAR},
      </if>
      <if test="notice7 != null" >
        #{notice7,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.older.manager.bean.NoticeExample" resultType="java.lang.Integer" >
    select count(*) from notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update notice
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.releasepeople != null" >
        releasePeople = #{record.releasepeople,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.notice1 != null" >
        notice1 = #{record.notice1,jdbcType=VARCHAR},
      </if>
      <if test="record.notice2 != null" >
        notice2 = #{record.notice2,jdbcType=VARCHAR},
      </if>
      <if test="record.notice3 != null" >
        notice3 = #{record.notice3,jdbcType=VARCHAR},
      </if>
      <if test="record.notice4 != null" >
        notice4 = #{record.notice4,jdbcType=VARCHAR},
      </if>
      <if test="record.notice5 != null" >
        notice5 = #{record.notice5,jdbcType=VARCHAR},
      </if>
      <if test="record.notice6 != null" >
        notice6 = #{record.notice6,jdbcType=VARCHAR},
      </if>
      <if test="record.notice7 != null" >
        notice7 = #{record.notice7,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update notice
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      releasePeople = #{record.releasepeople,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      notice1 = #{record.notice1,jdbcType=VARCHAR},
      notice2 = #{record.notice2,jdbcType=VARCHAR},
      notice3 = #{record.notice3,jdbcType=VARCHAR},
      notice4 = #{record.notice4,jdbcType=VARCHAR},
      notice5 = #{record.notice5,jdbcType=VARCHAR},
      notice6 = #{record.notice6,jdbcType=VARCHAR},
      notice7 = #{record.notice7,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.older.manager.bean.Notice" >
    update notice
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="releasepeople != null" >
        releasePeople = #{releasepeople,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="notice1 != null" >
        notice1 = #{notice1,jdbcType=VARCHAR},
      </if>
      <if test="notice2 != null" >
        notice2 = #{notice2,jdbcType=VARCHAR},
      </if>
      <if test="notice3 != null" >
        notice3 = #{notice3,jdbcType=VARCHAR},
      </if>
      <if test="notice4 != null" >
        notice4 = #{notice4,jdbcType=VARCHAR},
      </if>
      <if test="notice5 != null" >
        notice5 = #{notice5,jdbcType=VARCHAR},
      </if>
      <if test="notice6 != null" >
        notice6 = #{notice6,jdbcType=VARCHAR},
      </if>
      <if test="notice7 != null" >
        notice7 = #{notice7,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.older.manager.bean.Notice" >
    update notice
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      releasePeople = #{releasepeople,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      notice1 = #{notice1,jdbcType=VARCHAR},
      notice2 = #{notice2,jdbcType=VARCHAR},
      notice3 = #{notice3,jdbcType=VARCHAR},
      notice4 = #{notice4,jdbcType=VARCHAR},
      notice5 = #{notice5,jdbcType=VARCHAR},
      notice6 = #{notice6,jdbcType=VARCHAR},
      notice7 = #{notice7,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>