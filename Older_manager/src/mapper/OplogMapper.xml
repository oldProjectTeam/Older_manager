<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.older.manager.mapper.OplogMapper" >
  <resultMap id="BaseResultMap" type="com.older.manager.bean.Oplog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="Staff_id" property="staffId" jdbcType="INTEGER" />
    <result column="loginIP" property="loginip" jdbcType="VARCHAR" />
    <result column="loginTime" property="logintime" jdbcType="TIMESTAMP" />
    <result column="loginCount" property="logincount" jdbcType="INTEGER" />
    <result column="opmsg" property="opmsg" jdbcType="VARCHAR" />
    <result column="opType" property="optype" jdbcType="VARCHAR" />
    <result column="opLog1" property="oplog1" jdbcType="VARCHAR" />
    <result column="opLog2" property="oplog2" jdbcType="VARCHAR" />
    <result column="opLog3" property="oplog3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, Staff_id, loginIP, loginTime, loginCount, opmsg, opType, opLog1, opLog2, opLog3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.older.manager.bean.OplogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oplog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    order by id DESC
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from oplog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oplog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.older.manager.bean.OplogExample" >
    delete from oplog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.older.manager.bean.Oplog" >
    insert into oplog (id, Staff_id, loginIP, 
      loginTime, loginCount, opmsg, 
      opType, opLog1, opLog2, 
      opLog3)
    values (#{id,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, #{loginip,jdbcType=VARCHAR}, 
      #{logintime,jdbcType=TIMESTAMP}, #{logincount,jdbcType=INTEGER}, #{opmsg,jdbcType=VARCHAR}, 
      #{optype,jdbcType=VARCHAR}, #{oplog1,jdbcType=VARCHAR}, #{oplog2,jdbcType=VARCHAR}, 
      #{oplog3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.older.manager.bean.Oplog" >
    insert into oplog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="staffId != null" >
        Staff_id,
      </if>
      <if test="loginip != null" >
        loginIP,
      </if>
      <if test="logintime != null" >
        loginTime,
      </if>
      <if test="logincount != null" >
        loginCount,
      </if>
      <if test="opmsg != null" >
        opmsg,
      </if>
      <if test="optype != null" >
        opType,
      </if>
      <if test="oplog1 != null" >
        opLog1,
      </if>
      <if test="oplog2 != null" >
        opLog2,
      </if>
      <if test="oplog3 != null" >
        opLog3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="loginip != null" >
        #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="logincount != null" >
        #{logincount,jdbcType=INTEGER},
      </if>
      <if test="opmsg != null" >
        #{opmsg,jdbcType=VARCHAR},
      </if>
      <if test="optype != null" >
        #{optype,jdbcType=VARCHAR},
      </if>
      <if test="oplog1 != null" >
        #{oplog1,jdbcType=VARCHAR},
      </if>
      <if test="oplog2 != null" >
        #{oplog2,jdbcType=VARCHAR},
      </if>
      <if test="oplog3 != null" >
        #{oplog3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.older.manager.bean.OplogExample" resultType="java.lang.Integer" >
    select count(*) from oplog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oplog
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.staffId != null" >
        Staff_id = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.loginip != null" >
        loginIP = #{record.loginip,jdbcType=VARCHAR},
      </if>
      <if test="record.logintime != null" >
        loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logincount != null" >
        loginCount = #{record.logincount,jdbcType=INTEGER},
      </if>
      <if test="record.opmsg != null" >
        opmsg = #{record.opmsg,jdbcType=VARCHAR},
      </if>
      <if test="record.optype != null" >
        opType = #{record.optype,jdbcType=VARCHAR},
      </if>
      <if test="record.oplog1 != null" >
        opLog1 = #{record.oplog1,jdbcType=VARCHAR},
      </if>
      <if test="record.oplog2 != null" >
        opLog2 = #{record.oplog2,jdbcType=VARCHAR},
      </if>
      <if test="record.oplog3 != null" >
        opLog3 = #{record.oplog3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oplog
    set id = #{record.id,jdbcType=INTEGER},
      Staff_id = #{record.staffId,jdbcType=INTEGER},
      loginIP = #{record.loginip,jdbcType=VARCHAR},
      loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      loginCount = #{record.logincount,jdbcType=INTEGER},
      opmsg = #{record.opmsg,jdbcType=VARCHAR},
      opType = #{record.optype,jdbcType=VARCHAR},
      opLog1 = #{record.oplog1,jdbcType=VARCHAR},
      opLog2 = #{record.oplog2,jdbcType=VARCHAR},
      opLog3 = #{record.oplog3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.older.manager.bean.Oplog" >
    update oplog
    <set >
      <if test="staffId != null" >
        Staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="loginip != null" >
        loginIP = #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        loginTime = #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="logincount != null" >
        loginCount = #{logincount,jdbcType=INTEGER},
      </if>
      <if test="opmsg != null" >
        opmsg = #{opmsg,jdbcType=VARCHAR},
      </if>
      <if test="optype != null" >
        opType = #{optype,jdbcType=VARCHAR},
      </if>
      <if test="oplog1 != null" >
        opLog1 = #{oplog1,jdbcType=VARCHAR},
      </if>
      <if test="oplog2 != null" >
        opLog2 = #{oplog2,jdbcType=VARCHAR},
      </if>
      <if test="oplog3 != null" >
        opLog3 = #{oplog3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.older.manager.bean.Oplog" >
    update oplog
    set Staff_id = #{staffId,jdbcType=INTEGER},
      loginIP = #{loginip,jdbcType=VARCHAR},
      loginTime = #{logintime,jdbcType=TIMESTAMP},
      loginCount = #{logincount,jdbcType=INTEGER},
      opmsg = #{opmsg,jdbcType=VARCHAR},
      opType = #{optype,jdbcType=VARCHAR},
      opLog1 = #{oplog1,jdbcType=VARCHAR},
      opLog2 = #{oplog2,jdbcType=VARCHAR},
      opLog3 = #{oplog3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>